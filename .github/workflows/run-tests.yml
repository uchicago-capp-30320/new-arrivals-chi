name: Run-Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for changes in dependency files
        id: check-deps
        run: |
          echo "Checking pyproject.toml and poetry.lock for changes..."
          CHANGES=$(git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -E "^(pyproject.toml|poetry.lock)$")
          echo "Changed files: $CHANGES"
          if [ ! -z "$CHANGES" ]; then
            echo "::set-output name=poetry_updated::true"
          fi

      - name: Validate requirements.txt update
        if: steps.check-deps.outputs.poetry_updated == 'true'
        run: |
          REQUIREMENTS_CHANGE=$(git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -q "requirements.txt")
          echo "Requirements.txt changed: $REQUIREMENTS_CHANGE"
          if [ ! -z "$REQUIREMENTS_CHANGE" ]; then
            echo "requirements.txt updated correctly."
          else
            echo "ERROR: pyproject.toml or poetry.lock has changed, but requirements.txt has not been updated."
            echo "Please update requirements.txt by running 'make'."
            exit 1
          fi

  Test:
    needs: validate-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: cache deps
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.5.1
      - uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction
      - run: poetry run pytest
